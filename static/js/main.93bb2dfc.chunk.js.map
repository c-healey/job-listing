{"version":3,"sources":["components/FilterCard.js","components/ResultsCard.js","components/ResultList.js","components/setSearchItems.js","components/setSearchResult.js","components/getFilters.js","components/App.js","index.js"],"names":["FilterCard","props","filters","results","key","push","map","filter","className","replace","id","data-filter","onClick","e","category","filterValue","filterAction","target","document","querySelectorAll","forEach","filterNode","classList","add","length","dataset","innerHTML","handleStateUpdates","OnClickEvent","ResultsCard","item","this","featured","src","logo","alt","company","new","position","postedAt","contract","location","role","level","languages","lang","idx","tools","tool","React","Component","ResultList","jobsSearch","result","contains","querySelector","remove","OnClickResultList","setSearchItems","pickedFilters","searchInput","action","newPickedFilters","includes","JSON","parse","stringify","a","setSearchResult","jobs","jobSearch","job","filterVal","getFilters","newAllFilters","val","App","useState","setJobs","setJobsSearch","setFilters","setPickedFilters","useEffect","axios","get","response","data","value","ReactDOM","render"],"mappings":"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","file":"static/js/main.93bb2dfc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FilterCard = (props) => {\r\n  const OnClickEvent = (e) => {\r\n    let category = \"\";\r\n    let filterValue = \"\";\r\n    let filterAction = \"\";\r\n\r\n    if (e.target.id === \"clear-filters\") {\r\n      const filterNodes = [...document.querySelectorAll(\".filter-field\")];\r\n\r\n      filterNodes.forEach((filterNode) => {\r\n        filterNode.classList.add(\"hide\");\r\n      });\r\n\r\n      filterAction = \"clear\";\r\n    } else if (e.target.id.length > 0) {\r\n      e.target.classList.add(\"hide\");\r\n      category = e.target.dataset.filter;\r\n      filterValue = e.target.innerHTML;\r\n      filterAction = \"remove\";\r\n    }\r\n    props.handleStateUpdates(category, filterValue, filterAction);\r\n  };\r\n\r\n  let filters = props.filters;\r\n  let results = [];\r\n  for (let key in filters) {\r\n    results.push(\r\n      ...filters[key].map((filter) => {\r\n        return (\r\n          <button\r\n            className=\"btn btn--sqr btn--sm btn-job-detail filter-field hide\"\r\n            key={filter.replace(\" \", \"\")}\r\n            id={\"f\" + filter.replace(\" \", \"\")}\r\n            data-filter={key}\r\n          >\r\n            {filter}\r\n          </button>\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"filter-card\"\r\n      data-filter=\"clearFilters\"\r\n      onClick={(e) => {\r\n        OnClickEvent(e);\r\n      }}\r\n    >\r\n      <div className=\"filters\">{results}</div>\r\n      <button\r\n        className=\"clear-filters btn bt--sqr btn--sm btn--txt\"\r\n        id=\"clear-filters\"\r\n      >\r\n        Clear\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterCard;\r\n","import React from \"react\";\r\n\r\nclass ResultsCard extends React.Component {\r\n  render() {\r\n    let item = this.props.item;\r\n\r\n    return (\r\n      <div className={item.featured ? \"card featured\" : \"card\"} key={item.id}>\r\n        <div className=\"company-logo\">\r\n          <img src={item.logo} alt=\"company logo\" />\r\n        </div>\r\n        <div className=\"grid left job-profile\">\r\n          <h2>{item.company}</h2>\r\n          <div className=\"grid col-2 left\">\r\n            <button className={item.new ? \"btn  btn--sm btn-new\" : \"hide\"}>\r\n              New!\r\n            </button>\r\n            <button\r\n              className={item.featured ? \"btn  btn--sm btn-featured\" : \"hide\"}\r\n            >\r\n              Featured\r\n            </button>\r\n          </div>\r\n\r\n          <span className=\"full-width position\">{item.position}</span>\r\n          <ul className=\"menu--dot full-width\">\r\n            <li className=\" filter-option\" data-filter=\"postedAt\">\r\n              {item.postedAt}\r\n            </li>\r\n            <li className=\"dot filter-option\" data-filter=\"contract\">\r\n              {item.contract}\r\n            </li>\r\n            <li className=\"dot filter-option\" data-filter=\"location\">\r\n              {item.location}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"grid left job-detail\">\r\n          <button\r\n            className=\"btn btn--sqr btn--sm btn-job-detail filter-option\"\r\n            data-filter=\"role\"\r\n          >\r\n            {item.role}\r\n          </button>\r\n          <button\r\n            className=\"btn btn--sqr btn--sm btn-job-detail filter-option\"\r\n            data-filter=\"level\"\r\n          >\r\n            {item.level}\r\n          </button>\r\n          {item.languages\r\n            ? item.languages.map((lang, idx) => {\r\n                return (\r\n                  <button\r\n                    className=\"btn btn--sqr btn--sm btn-job-detail filter-option\"\r\n                    data-filter=\"languages\"\r\n                    key={item.id + lang}\r\n                  >\r\n                    {lang}\r\n                  </button>\r\n                );\r\n              })\r\n            : \"\"}\r\n          {item.tools\r\n            ? item.tools.map((tool, idx) => {\r\n                return (\r\n                  <button\r\n                    className=\"btn btn--sqr btn--sm btn-job-detail  filter-option\"\r\n                    data-filter=\"tools\"\r\n                    key={item.id + tool}\r\n                  >\r\n                    {tool}\r\n                  </button>\r\n                );\r\n              })\r\n            : \"\"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ResultsCard;\r\n","import React from \"react\";\r\nimport ResultCard from \"./ResultsCard\";\r\n\r\nconst ResultList = (props) => {\r\n  let jobsSearch = props.jobsSearch;\r\n\r\n  const OnClickResultList = (e) => {\r\n    let filterValue = \"\";\r\n    let filterAction = \"\";\r\n    let category = \"\";\r\n\r\n    if (e.target.classList.contains(\"filter-option\")) {\r\n      category = e.target.dataset.filter;\r\n      filterValue = e.target.innerHTML;\r\n      filterAction = \"add\";\r\n\r\n      document\r\n        .querySelector(`#f${e.target.innerHTML.replace(\" \", \"\")}`)\r\n        .classList.remove(\"hide\");\r\n    }\r\n    props.handleStateUpdates(category, filterValue, filterAction);\r\n  };\r\n\r\n  if (jobsSearch.length > 0) {\r\n    const results = jobsSearch.map((result, idx) => {\r\n      return <ResultCard key={idx} item={result} />;\r\n    });\r\n    return (\r\n      <div className=\"results\">\r\n        <div\r\n          className=\"result-list\"\r\n          onClick={(e) => {\r\n            OnClickResultList(e);\r\n          }}\r\n        >\r\n          {results}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return <div>Oh NO jobs. Bummer</div>;\r\n};\r\nexport default ResultList;\r\n","const setSearchItems = (pickedFilters, category, searchInput, action) => {\r\n  // default is clear\r\n  const noFiltersPicked = {\r\n    tools: [],\r\n    languages: [],\r\n    role: [],\r\n    level: [],\r\n    postedAt: [],\r\n    contract: [],\r\n    location: [],\r\n  };\r\n\r\n  let newPickedFilters = {};\r\n\r\n  if (action === \"init\" || action === \"clear\") {\r\n    return noFiltersPicked;\r\n  } else if (action === \"add\") {\r\n    if (\r\n      pickedFilters[category] &&\r\n      !pickedFilters[category].includes(searchInput)\r\n    ) {\r\n      newPickedFilters = JSON.parse(JSON.stringify(pickedFilters));\r\n\r\n      newPickedFilters[category].push(searchInput);\r\n    } else return pickedFilters;\r\n  } else if (action === \"remove\") {\r\n    newPickedFilters = JSON.parse(JSON.stringify(pickedFilters));\r\n\r\n    if (\r\n      newPickedFilters[category] &&\r\n      newPickedFilters[category].includes(searchInput)\r\n    ) {\r\n      newPickedFilters[category] = newPickedFilters[category].filter((a) => {\r\n        return a !== searchInput;\r\n      });\r\n    } else return pickedFilters;\r\n  }\r\n\r\n  return newPickedFilters;\r\n};\r\n\r\nexport default setSearchItems;\r\n","const setSearchResult = (pickedFilters, jobs) => {\r\n  let jobSearch = JSON.parse(JSON.stringify(jobs));\r\n\r\n  for (let key in pickedFilters) {\r\n    if (pickedFilters[key].length > 0) {\r\n      // find all jobs that match\r\n      jobSearch = jobSearch.filter((job) => {\r\n        if (job[key] && job[key].length > 0) {\r\n          if (\r\n            typeof job[key] === \"string\" &&\r\n            pickedFilters[key].includes(job[key])\r\n          )\r\n            return true;\r\n\r\n          for (let filterVal of job[key]) {\r\n            if (pickedFilters[key].includes(filterVal)) return true;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return jobSearch;\r\n};\r\n\r\nexport default setSearchResult;\r\n","import setSearchItems from \"./setSearchItems\";\r\n\r\nconst getFilters = (jobs) => {\r\n  let newAllFilters = setSearchItems([], \"\", \"\", \"init\");\r\n  jobs.forEach((job) => {\r\n    for (let key in job) {\r\n      if (job[key]) {\r\n        if ([\"languages\", \"tools\"].includes(key)) {\r\n          for (let val of job[key]) {\r\n            newAllFilters = setSearchItems(newAllFilters, key, val, \"add\");\r\n          }\r\n        } else if (\r\n          [\r\n            \"role\",\r\n            \"level\",\r\n            \"postedAt\",\r\n            \"contract\",\r\n            \"location\",\r\n            \"languages\",\r\n            \"tools\",\r\n          ].includes(key) &&\r\n          !newAllFilters[key].includes(job[key])\r\n        ) {\r\n          newAllFilters = setSearchItems(newAllFilters, key, job[key], \"add\");\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  return newAllFilters;\r\n};\r\n\r\nexport default getFilters;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport FilterCard from \"./FilterCard\";\r\nimport ResultList from \"./ResultList\";\r\nimport setSearchItems from \"./setSearchItems\";\r\nimport setSearchResult from \"./setSearchResult\";\r\nimport \"../sass/main.scss\";\r\n\r\nimport getFilters from \"./getFilters\";\r\n\r\nconst App = () => {\r\n  // debatable if jobs  need to be a state var\r\n  // because the page is only updated when filters are picked or removed\r\n  const [jobs, setJobs] = useState([]);\r\n  const [jobsSearch, setJobsSearch] = useState([]);\r\n  const [filters, setFilters] = useState({\r\n    tools: [],\r\n    languages: [],\r\n    role: [],\r\n    level: [],\r\n    postedAt: [],\r\n    contract: [],\r\n    location: [],\r\n  });\r\n  const [pickedFilters, setPickedFilters] = useState({\r\n    tools: [],\r\n    languages: [],\r\n    role: [],\r\n    level: [],\r\n    postedAt: [],\r\n    contract: [],\r\n    location: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await axios.get(`./data.json`);\r\n      setJobs(response.data);\r\n      setFilters(getFilters(response.data));\r\n      setPickedFilters(setSearchItems({}, \"\", \"\", \"init\"));\r\n      setJobsSearch(response.data);\r\n    })();\r\n  }, []);\r\n\r\n  const handleStateUpdates = (category, value, action) => {\r\n    let newPickedFilters = setSearchItems(\r\n      pickedFilters,\r\n      category,\r\n      value,\r\n      action\r\n    );\r\n\r\n    setPickedFilters(newPickedFilters);\r\n\r\n    setJobsSearch(setSearchResult(newPickedFilters, jobs));\r\n    // not passing the pickedFilters state variable because it isn't updated yet.\r\n    // so annoying\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"content center-col\">\r\n        <FilterCard filters={filters} handleStateUpdates={handleStateUpdates} />\r\n        <ResultList\r\n          jobsSearch={jobsSearch}\r\n          handleStateUpdates={handleStateUpdates}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}